//working main code
#include <FuzzyRule.h>
#include <FuzzyComposition.h>
#include <Fuzzy.h>
#include <FuzzyRuleConsequent.h>
#include <FuzzyOutput.h>
#include <FuzzyInput.h>
#include <FuzzyIO.h>
#include <FuzzySet.h>
#include <FuzzyRuleAntecedent.h>

#include <dht.h>
dht DHT;

#define DHT22_PIN 6
#define pump_pin 4

Fuzzy* fuzzy = new Fuzzy();

//TODO: Confirm if this is true with the plant we are handling
//Fuzzification for Temperature
FuzzySet* cold = new FuzzySet(0, 0, 20, 30);
FuzzySet* normal = new FuzzySet(25, 30, 30, 35); 
FuzzySet* hot = new FuzzySet(30, 35, 40, 40); 

//Fuzzification for Humidity
FuzzySet* dry = new FuzzySet(0, 0, 23, 38);
FuzzySet* damp = new FuzzySet(23, 38, 38, 71);
FuzzySet* humid = new FuzzySet(57, 71, 95, 95);

//Fuzzification for Soil Moisture
FuzzySet* dried = new FuzzySet(3, 3, 5, 10);
FuzzySet* moist = new FuzzySet(30, 50, 50, 70);
FuzzySet* wet = new FuzzySet(60, 80, 100, 100);

// Fuzzification for Pump Action
FuzzySet* pumpOn = new FuzzySet(1, 1, 1, 1);
FuzzySet* pumpOff = new FuzzySet(0, 0, 0, 0);


//Variables
int chk;
int hum;
int temp;
float msture;
int msturePrcnt; 

//Moisture Calibration
const int dryValue = 490;
const int wetValue = 260;


void setup() {
  Serial.begin(9600);
  pinMode(pump_pin, OUTPUT);
  digitalWrite(pump_pin, LOW); // Ensure the pump is initially off

  //FuzzyInput Variables
  //Temp variables with 0 to 40 as input
  FuzzyInput* temperature = new FuzzyInput(1);

  temperature -> addFuzzySet(cold);
  temperature -> addFuzzySet(normal);
  temperature -> addFuzzySet(hot);
  fuzzy->addFuzzyInput(temperature);

  //Humidity variables with 0 to 95 as input
  FuzzyInput* humidity = new FuzzyInput(2);

  humidity -> addFuzzySet(dry);
  humidity -> addFuzzySet(damp);
  humidity -> addFuzzySet(humid);
  fuzzy->addFuzzyInput(humidity);

  //Moisture variables with 0 to 100 as input
  FuzzyInput* moisture = new FuzzyInput(3);

  moisture -> addFuzzySet(dried);
  moisture -> addFuzzySet(moist);
  moisture -> addFuzzySet(wet);
  fuzzy->addFuzzyInput(moisture);

  // FuzzyOutput for pump control
  FuzzyOutput* pump = new FuzzyOutput(1);

  pump->addFuzzySet(pumpOn);
  pump->addFuzzySet(pumpOff);
  fuzzy->addFuzzyOutput(pump);

  //Rules
  //Consequent for pump on and pump off
  FuzzyRuleConsequent* thenPumpOn = new FuzzyRuleConsequent();
  thenPumpOn->addOutput(pumpOn);

  FuzzyRuleConsequent* thenPumpOff = new FuzzyRuleConsequent();
  thenPumpOff->addOutput(pumpOff);

  // Rule 1: IF SOIL MOISTURE IS DRY AND TEMP IS COLD AND HUMIDITY IS HUMID THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempCold = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempCold->joinWithAND(dried, cold);
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempColdAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempColdAndHumidityHumid->joinWithAND(ifSoilMoistureDryAndTempCold, humid);
  FuzzyRule* fuzzyRule1 = new FuzzyRule(1, ifSoilMoistureDryAndTempColdAndHumidityHumid, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule1);

  // Rule 2: IF SOIL MOISTURE IS DRY AND TEMP IS COLD AND HUMIDITY IS DAMP THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempColdAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempColdAndHumidityDamp->joinWithAND(ifSoilMoistureDryAndTempCold, damp);
  FuzzyRule* fuzzyRule2 = new FuzzyRule(2, ifSoilMoistureDryAndTempColdAndHumidityDamp, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule2);

  // Rule 3: IF SOIL MOISTURE IS DRY AND TEMP IS COLD AND HUMIDITY IS DRY THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempColdAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempColdAndHumidityDry->joinWithAND(ifSoilMoistureDryAndTempCold, dry);
  FuzzyRule* fuzzyRule3 = new FuzzyRule(3, ifSoilMoistureDryAndTempColdAndHumidityDry, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule3);

  // Rule 4: IF SOIL MOISTURE IS DRY AND TEMP IS NORM AND HUMIDITY IS HUMID THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempNorm = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempNorm->joinWithAND(dried, normal);
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempNormAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempNormAndHumidityHumid->joinWithAND(ifSoilMoistureDryAndTempNorm, humid);
  FuzzyRule* fuzzyRule4 = new FuzzyRule(4, ifSoilMoistureDryAndTempNormAndHumidityHumid, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule4);

  // Rule 5: IF SOIL MOISTURE IS DRY AND TEMP IS NORM AND HUMIDITY IS DAMP THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempNormAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempNormAndHumidityDamp->joinWithAND(ifSoilMoistureDryAndTempNorm, damp);
  FuzzyRule* fuzzyRule5 = new FuzzyRule(5, ifSoilMoistureDryAndTempNormAndHumidityDamp, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule5);

  // Rule 6: IF SOIL MOISTURE IS DRY AND TEMP IS NORM AND HUMIDITY IS DRY THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempNormAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempNormAndHumidityDry->joinWithAND(ifSoilMoistureDryAndTempNorm, dry);
  FuzzyRule* fuzzyRule6 = new FuzzyRule(6, ifSoilMoistureDryAndTempNormAndHumidityDry, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule6);

  // Rule 7: IF SOIL MOISTURE IS DRY AND TEMP IS HOT AND HUMIDITY IS HUMID THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempHot = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempHot->joinWithAND(dried, hot);
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempHotAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempHotAndHumidityHumid->joinWithAND(ifSoilMoistureDryAndTempHot, humid);
  FuzzyRule* fuzzyRule7 = new FuzzyRule(7, ifSoilMoistureDryAndTempHotAndHumidityHumid, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule7);

  // Rule 8: IF SOIL MOISTURE IS DRY AND TEMP IS HOT AND HUMIDITY IS DAMP THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempHotAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempHotAndHumidityDamp->joinWithAND(ifSoilMoistureDryAndTempHot, damp);
  FuzzyRule* fuzzyRule8 = new FuzzyRule(8, ifSoilMoistureDryAndTempHotAndHumidityDamp, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule8);

  // Rule 9: IF SOIL MOISTURE IS DRY AND TEMP IS HOT AND HUMIDITY IS DRY THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureDryAndTempHotAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureDryAndTempHotAndHumidityDry->joinWithAND(ifSoilMoistureDryAndTempHot, dry);
  FuzzyRule* fuzzyRule9 = new FuzzyRule(9, ifSoilMoistureDryAndTempHotAndHumidityDry, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule9);

  // Rule 10: IF SOIL MOISTURE IS MOIST AND TEMP IS COLD AND HUMIDITY IS HUMID THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempCold = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempCold->joinWithAND(moist, cold);
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempColdAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempColdAndHumidityHumid->joinWithAND(ifSoilMoistureMoistAndTempCold, humid);
  FuzzyRule* fuzzyRule10 = new FuzzyRule(10, ifSoilMoistureMoistAndTempColdAndHumidityHumid, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule10);

  // Rule 11: IF SOIL MOISTURE IS MOIST AND TEMP IS COLD AND HUMIDITY IS DAMP THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempColdAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempColdAndHumidityDamp->joinWithAND(ifSoilMoistureMoistAndTempCold, damp);
  FuzzyRule* fuzzyRule11 = new FuzzyRule(11, ifSoilMoistureMoistAndTempColdAndHumidityDamp, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule11);

  // Rule 12: IF SOIL MOISTURE IS MOIST AND TEMP IS COLD AND HUMIDITY IS DRY THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempColdAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempColdAndHumidityDry->joinWithAND(ifSoilMoistureMoistAndTempCold, dry);
  FuzzyRule* fuzzyRule12 = new FuzzyRule(12, ifSoilMoistureMoistAndTempColdAndHumidityDry, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule12);

  // Rule 13: IF SOIL MOISTURE IS MOIST AND TEMP IS NORM AND HUMIDITY IS HUMID THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempNorm = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempNorm->joinWithAND(moist, normal);
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempNormAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempNormAndHumidityHumid->joinWithAND(ifSoilMoistureMoistAndTempNorm, humid);
  FuzzyRule* fuzzyRule13 = new FuzzyRule(13, ifSoilMoistureMoistAndTempNormAndHumidityHumid, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule13);

  // Rule 14: IF SOIL MOISTURE IS MOIST AND TEMP IS NORM AND HUMIDITY IS DAMP THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempNormAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempNormAndHumidityDamp->joinWithAND(ifSoilMoistureMoistAndTempNorm, damp);
  FuzzyRule* fuzzyRule14 = new FuzzyRule(14, ifSoilMoistureMoistAndTempNormAndHumidityDamp, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule14);

  // Rule 15: IF SOIL MOISTURE IS MOIST AND TEMP IS NORM AND HUMIDITY IS DRY THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempNormAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempNormAndHumidityDry->joinWithAND(ifSoilMoistureMoistAndTempNorm, dry);
  FuzzyRule* fuzzyRule15 = new FuzzyRule(15, ifSoilMoistureMoistAndTempNormAndHumidityDry, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule15);

  // Rule 16: IF SOIL MOISTURE IS MOIST AND TEMP IS HOT AND HUMIDITY IS HUMID THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempHot = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempHot->joinWithAND(moist, hot);
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempHotAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempHotAndHumidityHumid->joinWithAND(ifSoilMoistureMoistAndTempHot, humid);
  FuzzyRule* fuzzyRule16 = new FuzzyRule(16, ifSoilMoistureMoistAndTempHotAndHumidityHumid, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule16);

  // Rule 17: IF SOIL MOISTURE IS MOIST AND TEMP IS HOT AND HUMIDITY IS DAMP THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempHotAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempHotAndHumidityDamp->joinWithAND(ifSoilMoistureMoistAndTempHot, damp);
  FuzzyRule* fuzzyRule17 = new FuzzyRule(17, ifSoilMoistureMoistAndTempHotAndHumidityDamp, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule17);

  // Rule 18: IF SOIL MOISTURE IS MOIST AND TEMP IS HOT AND HUMIDITY IS DRY THEN PUMP IS ON.
  FuzzyRuleAntecedent* ifSoilMoistureMoistAndTempHotAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureMoistAndTempHotAndHumidityDry->joinWithAND(ifSoilMoistureMoistAndTempHot, dry);
  FuzzyRule* fuzzyRule18 = new FuzzyRule(18, ifSoilMoistureMoistAndTempHotAndHumidityDry, thenPumpOn);
  fuzzy->addFuzzyRule(fuzzyRule18);

  // Rule 19: IF SOIL MOISTURE IS WET AND TEMP IS COLD AND HUMIDITY IS HUMID THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempCold = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempCold->joinWithAND(wet, cold);
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempColdAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempColdAndHumidityHumid->joinWithAND(ifSoilMoistureWetAndTempCold, humid);
  FuzzyRule* fuzzyRule19 = new FuzzyRule(19, ifSoilMoistureWetAndTempColdAndHumidityHumid, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule19);

  // Rule 20: IF SOIL MOISTURE IS WET AND TEMP IS COLD AND HUMIDITY IS DAMP THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempColdAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempColdAndHumidityDamp->joinWithAND(ifSoilMoistureWetAndTempCold, damp);
  FuzzyRule* fuzzyRule20 = new FuzzyRule(20, ifSoilMoistureWetAndTempColdAndHumidityDamp, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule20);

  // Rule 21: IF SOIL MOISTURE IS WET AND TEMP IS COLD AND HUMIDITY IS DRY THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempColdAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempColdAndHumidityDry->joinWithAND(ifSoilMoistureWetAndTempCold, dry);
  FuzzyRule* fuzzyRule21 = new FuzzyRule(21, ifSoilMoistureWetAndTempColdAndHumidityDry, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule21);

  // Rule 22: IF SOIL MOISTURE IS WET AND TEMP IS NORM AND HUMIDITY IS HUMID THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempNorm = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempNorm->joinWithAND(wet, normal);
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempNormAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempNormAndHumidityHumid->joinWithAND(ifSoilMoistureWetAndTempNorm, humid);
  FuzzyRule* fuzzyRule22 = new FuzzyRule(22, ifSoilMoistureWetAndTempNormAndHumidityHumid, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule22);

  // Rule 23: IF SOIL MOISTURE IS WET AND TEMP IS NORM AND HUMIDITY IS DAMP THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempNormAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempNormAndHumidityDamp->joinWithAND(ifSoilMoistureWetAndTempNorm, damp);
  FuzzyRule* fuzzyRule23 = new FuzzyRule(23, ifSoilMoistureWetAndTempNormAndHumidityDamp, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule23);

  // Rule 24: IF SOIL MOISTURE IS WET AND TEMP IS NORM AND HUMIDITY IS DRY THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempNormAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempNormAndHumidityDry->joinWithAND(ifSoilMoistureWetAndTempNorm, dry);
  FuzzyRule* fuzzyRule24 = new FuzzyRule(24, ifSoilMoistureWetAndTempNormAndHumidityDry, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule24);

  // Rule 25: IF SOIL MOISTURE IS WET AND TEMP IS HOT AND HUMIDITY IS HUMID THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempHot = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempHot->joinWithAND(wet, hot);
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempHotAndHumidityHumid = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempHotAndHumidityHumid->joinWithAND(ifSoilMoistureWetAndTempHot, humid);
  FuzzyRule* fuzzyRule25 = new FuzzyRule(25, ifSoilMoistureWetAndTempHotAndHumidityHumid, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule25);

  // Rule 26: IF SOIL MOISTURE IS WET AND TEMP IS HOT AND HUMIDITY IS DAMP THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempHotAndHumidityDamp = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempHotAndHumidityDamp->joinWithAND(ifSoilMoistureWetAndTempHot, damp);
  FuzzyRule* fuzzyRule26 = new FuzzyRule(26, ifSoilMoistureWetAndTempHotAndHumidityDamp, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule26);

  // Rule 27: IF SOIL MOISTURE IS WET AND TEMP IS HOT AND HUMIDITY IS DRY THEN PUMP IS OFF.
  FuzzyRuleAntecedent* ifSoilMoistureWetAndTempHotAndHumidityDry = new FuzzyRuleAntecedent();
  ifSoilMoistureWetAndTempHotAndHumidityDry->joinWithAND(ifSoilMoistureWetAndTempHot, dry);
  FuzzyRule* fuzzyRule27 = new FuzzyRule(27, ifSoilMoistureWetAndTempHotAndHumidityDry, thenPumpOff);
  fuzzy->addFuzzyRule(fuzzyRule27);
}

void loop() {
  chk = DHT.read22(DHT22_PIN);
  hum  = DHT.humidity;
  temp = DHT.temperature; 
  int value = analogRead(A0);

  msture = value * 500.0 / 1023.0;
  msturePrcnt = map(msture, dryValue, wetValue, 0, 100);

  Serial.print("Moisture (raw): ");
  Serial.println(msture);


  
  //prints in serial monitor
  Serial.print(msture);
  Serial.print("Temperature = ");
  Serial.print(temp);
  Serial.println("°C");

  Serial.print("Humidity = ");
  Serial.print(hum);
  Serial.println("%");
  
  Serial.print("Moisture: ");
  Serial.print(msturePrcnt);
  Serial.println("%");
  

  fuzzy->setInput(1, temp);
  fuzzy->setInput(2, hum);
  fuzzy->setInput(3, msturePrcnt);
  fuzzy->fuzzify();
  int output = fuzzy->defuzzify(1);
  //no idea how the relay works yet since it's untestest
  //but my plan is to control it with output since output only outputs 0 and 1

  delay(1000);
  Serial.print(output);
  if (output == 1) {
    digitalWrite(pump_pin, HIGH); // Turn on the pump
    Serial.println("ON");
  } else {
    digitalWrite(pump_pin, LOW); // Turn off the pump
    Serial.println("OFF");
  }

  /*
  if (msture <= 400) {
    digitalWrite(pump_pin, LOW); // Turn on the pump
    Serial.println("ON");
  } else {
    digitalWrite(pump_pin, HIGH); // Turn off the pump
    Serial.println("OFF");
  }
  */
}
  
